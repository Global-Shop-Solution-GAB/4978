Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sDirVending.Declare
	V.Global.sDirComplete.Declare
	V.Global.sDirFailed.Declare
	V.Global.sDirExceptions.Declare
	V.Global.sFileVending.Declare
	V.Global.sFileVendingFile.Declare
	V.Global.sFileComplete.Declare
	V.Global.sFileFailed.Declare
	V.Global.sFileExceptions.Declare
	V.Global.sFileExceptionsFile.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.ODBC.Connection!Con.OpenCompanyConnection(500)
	
	F.Intrinsic.Control.CallSub(CheckDirectories)
	F.Intrinsic.Control.CallSub(GetFiles)
	
	F.ODBC.Connection!con.Close

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.CheckDirectories.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.String.Build("{0}\Vending\",V.Caller.FilesDir,V.Global.sDirVending)
	F.Intrinsic.File.CreateDir(V.Global.sDirVending)
	F.Intrinsic.String.Build("{0}\Vending\Complete\",V.Caller.FilesDir,V.Global.sDirComplete)
	F.Intrinsic.File.CreateDir(V.Global.sDirComplete)
	F.Intrinsic.String.Build("{0}\Vending\Failed\",V.Caller.FilesDir,V.Global.sDirFailed)
	F.Intrinsic.File.CreateDir(V.Global.sDirFailed)
	F.Intrinsic.String.Build("{0}\Vending\Exceptions\",V.Caller.FilesDir,V.Global.sDirExceptions)
	F.Intrinsic.File.CreateDir(V.Global.sDirExceptions)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckDirectories.End

Program.Sub.GetFiles.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFiles.Declare
	V.Local.iCnt.Declare

	'F.Intrinsic.File.GetFileList(V.Global.sDirVending,1,V.Local.sFiles)
	F.Intrinsic.File.GetFileList(V.Global.sDirVending,V.Local.sFiles)
	F.Intrinsic.String.Split(V.Local.sFiles,":",V.Local.sFiles)
	F.Intrinsic.Control.If(V.Local.sFiles,=,"")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sFiles.UBound,1)
			V.Global.sFileVendingFile.Set(V.Local.sFiles(V.Local.iCnt))
			F.Intrinsic.String.Build("{0}{1}",V.Global.sDirVending,V.Local.sFiles(V.Local.iCnt),V.Global.sFileVending)
			F.Intrinsic.String.Build("{0}{1}_{2}_{3}",V.Global.sDirComplete,V.Ambient.Date.FormatMMDDYYYY,V.Ambient.Time.FormatHHNNSS,V.Local.sFiles(V.Local.iCnt),V.Global.sFileComplete)
			F.Intrinsic.String.Build("{0}{1}_{2}_{3}",V.Global.sDirFailed,V.Ambient.Date.FormatMMDDYYYY,V.Ambient.Time.FormatHHNNSS,V.Local.sFiles(V.Local.iCnt),V.Global.sFileFailed)
			F.Intrinsic.String.Build("{0}_{1}_Exception.csv",V.Ambient.Date.FormatMMDDYYYY,V.Ambient.Time.FormatHHNNSS,V.Global.sFileExceptionsFile)
			F.Intrinsic.String.Build("{0}{1}",V.Global.sDirExceptions,V.Global.sFileExceptionsFile,V.Global.sFileExceptions)
			F.Intrinsic.Control.CallSub(ImportData)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GetFiles.End

Program.Sub.ImportData.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sLines.Declare
	V.Local.iCnt.Declare
	V.Local.sData.Declare
	V.Local.sUpload.Declare
	V.Local.sPart.Declare
	V.Local.sRev.Declare
	V.Local.sLocation.Declare
	V.Local.bPartNotFound.Declare
	V.Local.sQuantity.Declare
	V.Local.sQtyOnHand.Declare
	V.Local.bLBHS.Declare
	V.Local.bInsufficientInventory.Declare
	V.Local.sLot.Declare
	V.Local.sBin.Declare
	V.Local.sHeat.Declare
	V.Local.sSerial.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sSeq.Declare
	V.Local.bInvalidJob.Declare
	V.Local.sFile.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sExcept.Declare
	V.Local.sParams.Declare
	V.Local.sEmail.Declare
	V.Local.sAttachments.Declare
	V.Local.sSender.Declare
	V.Local.sRecipient.Declare
	V.Local.iLen.Declare
	
'0	PART 	Length(20)
'1	LOCN 	Length(2)
'2	QTY 	Length(16)
'3	LOT 	Length(15)
'4	BIN 	Length(6)
'5	HEAT 	Length(15)
'6	SERIAL 	Length(30)
'7	JOB 	Length(6)
'8	SUFFIX 	Length(3)
'9	SEQ 	Length(6)
	
	F.Intrinsic.File.File2String(V.Global.sFileVending,V.Local.sLines)
	F.Intrinsic.String.Split(V.Local.sLines,V.Ambient.NewLine,V.Local.sLines)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sLines.UBound,1)
		F.Intrinsic.Control.If(V.Local.sLines(v.Local.iCnt),<>,"")
			F.Intrinsic.String.Split(V.Local.sLines(v.Local.iCnt),",",V.Local.sData)
			'Part
			V.Local.sPart.Set(V.Local.sData(0))
			F.Intrinsic.String.Replace(V.Local.sPart,"""","",V.Local.sPart)
			'Rev
			V.Local.sRev.Set(V.Local.sData(0))
			F.Intrinsic.String.Len(V.Local.sRev,V.Local.iLen)
			F.Intrinsic.Control.If(V.Local.iLen,=>,18)
				F.Intrinsic.Math.Sub(V.Local.iLen,17,V.Local.iLen)
				F.Intrinsic.String.Right(V.Local.sRev,V.Local.iLen,V.Local.sRev)
			F.Intrinsic.Control.Else
				V.Local.sRev.Set("")
			F.Intrinsic.Control.EndIf
			'Location
			V.Local.sLocation.Set(V.Local.sData(1))
			F.Intrinsic.String.Replace(V.Local.sLocation,"""","",V.Local.sLocation)
			'VALIDATE-PART-NUMBER
			F.Intrinsic.String.Build("Select Part,Flag_Lot From V_Inventory_Mstr Where Part = '{0}' And Location = '{1}';",V.Local.sPart.Trim,V.Local.sLocation.Trim,V.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.bPartNotFound.Set(V.Ambient.ExecuteAndReturnEOF)
			'Quantity
			V.Local.sQuantity.Set(V.Local.sData(2))
			F.Intrinsic.String.LPad(V.Local.sQuantity,"0",8,V.Local.sQuantity)
			'Lot
			V.Local.sLot.Set(V.Local.sData(3))
			F.Intrinsic.String.Replace(V.Local.sLot,"""","",V.Local.sLot)
			'Bin
			V.Local.sBin.Set(V.Local.sData(4))
			F.Intrinsic.String.Replace(V.Local.sBin,"""","",V.Local.sBin)
			'Heat
			V.Local.sHeat.Set(V.Local.sData(5))
			F.Intrinsic.String.Replace(V.Local.sHeat,"""","",V.Local.sHeat)
			'Serial
			V.Local.sSerial.Set(V.Local.sData(6))
			F.Intrinsic.String.Replace(V.Local.sSerial,"""","",V.Local.sSerial)
			'VALIDATE-ON-HAND-QTY
			F.Intrinsic.Control.If(V.Local.sQuantity,=,"")
				F.Intrinsic.String.LPad("0","0",8,V.Local.sQuantity)
				V.Local.bInsufficientInventory.Set(False)
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.If(V.Local.sRet(1).Trim,<>,"Y")
					F.Intrinsic.String.Build("Select Qty_OnHand From V_Inventory_Mstr Where Part = '{0}' And Location = '{1}';",V.Local.sPart.Trim,V.Local.sLocation.Trim,V.Local.sSQL)
					F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sQtyOnHand)
					F.Intrinsic.Control.If(V.Local.sQuantity,>,V.Local.sQtyOnHand)
						V.Local.bInsufficientInventory.Set(True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("Select Quantity From V_Item_Master Where Part = '{0}' And Location = '{1}' And Lot = '{2}' And Bin = '{3}' And Heat = '{4}' And Serial_Number = '{5}';", V.Local.sPart.Trim,V.Local.sLocation.Trim,V.Local.sLot.Trim,V.Local.sBin.Trim,V.Local.sHeat.Trim,V.Local.sSerial.Trim,V.Local.sSQL)
					F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sQtyOnHand)
					F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
						V.Local.bLBHS.Set(True)
						V.Local.bInsufficientInventory.Set(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.Control.If(V.Local.sQuantity,>,V.Local.sQtyOnHand)
							V.Local.bLBHS.Set(True)
							V.Local.bInsufficientInventory.Set(True)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Format(V.Local.sQuantity,"0.0000",V.Local.sQuantity)
			'Job
			V.Local.sJob.Set(V.Local.sData(7))
			'Suffix
			V.Local.sSuffix.Set(V.Local.sData(8))
			'VALIDATE-JOB
			F.Intrinsic.String.Build("Select Job From V_Job_Header Where Job = '{0}' And Suffix = '{1}';",V.Local.sJob.Trim,V.Local.sSuffix.Trim,V.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			V.Local.bInvalidJob.Set(V.Ambient.ExecuteAndReturnEOF)
			'Seq
			V.Local.sSeq.Set(V.Local.sData(9))
			F.Intrinsic.Control.If(V.Local.sSeq.Trim,=,"")
				V.Local.sSeq.Set("995000")
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\L{1}CWTRANS.txt",V.Caller.FilesDir,V.Caller.CompanyCode,V.Local.sFile)
			F.Intrinsic.String.Build("{1}{2}{0}{3}{0}{4}{0}{5}{0}{6}{0}{7}{0}{8}{0}{9}{0}{10}{0}{11}{0}{12}{13}", V.Ambient.Tab,V.Local.sUpload,V.Local.sPart.Trim,V.Local.sRev.Trim,V.Local.sLocation.Trim,V.Local.sQuantity,V.Local.sLot.Trim,V.Local.sBin.Trim,V.Local.sHeat.Trim,V.Local.sSerial.Trim,V.Local.sJob.Trim,V.Local.sSuffix.Trim,V.Local.sSeq.Trim,V.Ambient.NewLine,V.Local.sUpload)
			F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sUpload)
			
			F.Intrinsic.Control.If(V.Local.bPartNotFound,=,True,OR,V.Local.bInsufficientInventory,=,True,V.Local.bInvalidJob,=,True)
				F.Intrinsic.String.Build("{0}{1},{2},{3},{4},{5},{6},{7},{8},{9},{10},Inv", V.Local.sExcept,V.Local.sPart.Trim,V.Local.sLocation.Trim,V.Local.sQuantity,V.Local.sLot.Trim,V.Local.sBin.Trim,V.Local.sHeat.Trim,V.Local.sSerial.Trim,V.Local.sJob.Trim,V.Local.sSuffix.Trim,V.Local.sSeq.Trim,V.Local.sExcept)
				'Part Not Found
				F.Intrinsic.Control.If(V.Local.bPartNotFound)
					F.Intrinsic.String.Build("{0} || Part-Not-Found",V.Local.sExcept,V.Local.sPart,V.Local.sExcept)
				F.Intrinsic.Control.EndIf
				'Insufficient Inventory
				F.Intrinsic.Control.If(V.Local.bInsufficientInventory)
				F.Intrinsic.Control.AndIf(V.Local.bLBHS)
					F.Intrinsic.String.Build("{0} || Insufficient-Inventory-Check-Lot-Bin-Heat-Serial",V.Local.sExcept,V.Local.sExcept)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0} || Insufficient-Inventory",V.Local.sExcept,V.Local.sExcept)
				F.Intrinsic.Control.EndIf
				'Invalid Job
				F.Intrinsic.Control.If(V.Local.bInvalidJob)
					F.Intrinsic.String.Build("{0} || Invalid-Job",V.Local.sExcept,V.Local.sExcept)
				F.Intrinsic.Control.EndIf
				'Add File
				F.Intrinsic.String.Build("{0} || File: {1}{2}",V.Local.sExcept,V.Global.sFileFailed,V.Ambient.NewLine,V.Local.sExcept)
				F.Intrinsic.File.String2File(V.Global.sFileExceptions,V.Local.sExcept)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.If(V.Local.sExcept,=,"")
		F.Intrinsic.String.Build("L{0}CWTRANS.txt",V.Caller.CompanyCode,V.Local.sParams)
		F.Global.General.CallWrapperSync(450101,V.Local.sParams)
		F.Intrinsic.File.CopyFile(V.Global.sFileVending,V.Global.sFileComplete)
		F.Intrinsic.File.DeleteFile(V.Global.sFileVending)
	F.Intrinsic.Control.Else
		F.Global.Security.GetUserEmail(V.Caller.User,V.Caller.CompanyCode,V.Local.sEmail)
		F.Intrinsic.Control.If(V.Local.sEmail,<>,"")
			F.Intrinsic.String.Build("{0}*!*{1}@!@{2}*!*{3}",V.Global.sFileVendingFile,V.Global.sDirVending,V.Global.sFileExceptionsFile,V.Global.sDirExceptions,V.Local.sAttachments)
			F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sEmail,V.Caller.User,V.Local.sSender)
			F.Intrinsic.String.Build("{0}*!*{1}",V.Caller.User,V.Local.sEmail,V.Local.sRecipient)
			F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,"","Vending Machine Import Failed",V.Local.sSender,V.Local.sRecipient,"View attachments for more information.",5,"",False,"","","","","","","",V.Local.sAttachments,False)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.File.CopyFile(V.Global.sFileVending,V.Global.sFileFailed)
		F.Intrinsic.File.DeleteFile(V.Global.sFileVending)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\L{1}CWTRANS.txt",V.Caller.FilesDir,V.Caller.CompanyCode,V.Local.sFile)
	F.Intrinsic.File.DeleteFile(V.Local.sFile)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.ImportData.End